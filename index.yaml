openapi: '3.0.0'
info:
  version: '1.0.0'
  title: 'Company Users API'
  description: Manage users in a company

paths:
  /users/{userId}:
    parameters:
      - name: userId
        description: The unique identifier of the user
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/UserId'
    get:
      summary: Read a user
      responses:
        '200':
          description: The user corresponding to the provided `userId`
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
        404:
          description: No user found for the provided `userId`
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        500:
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'

    put:
      summary: Update an existing user
      requestBody:
        description: User data to be updated
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/User'
      responses:
        '200':
          description: The updated user
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
        404:
          description: No user found for the provided `userId`
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        500:
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'

    delete:
      summary: Delete a user
      responses:
        '204':
          description: User deleted successfully
        404:
          description: No user found for the provided `userId`
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        500:
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'

  /users:
    post:
      summary: Create a new user
      requestBody:
        description: The new user to be created
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/User'
      responses:
        '201':
          description: The created user
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
        400:
          description: Invalid input
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        500:
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'

components:
  schemas:
    UserId:
      description: The unique identifier of a user
      type: string

    User:
      type: object
      required:
        - id
        - name
        - email
        - role
      properties:
        id:
          $ref: '#/components/schemas/UserId'
        name:
          type: string
        email:
          type: string
          format: email
        role:
          type: string
          enum:
            - admin
            - employee
            - manager
        description:
          type: string

    Error:
      type: object
      required:
        - message
      properties:
        message:
          description: A human-readable error message
          type: string

  securitySchemes:
    ApiKey:
      type: apiKey
      in: header
      name: X-Api-Key

security:
  - ApiKey: []
